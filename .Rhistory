letters[1:3]
letters[3:1]
letters[3:1:1]
letters[3:1:2]
letters[26:1:2]
letters[2]
LETTERS
LETTERS[3:1]
LETTERS[26:4]
help("rep")
rep(3.5,10)
rep(3.5,times=10)
rep(1:4,10)
rep(1:3,10,2)
rep(1:3,each=2, times=3)
rep(1:4, 2:5)
rep(1:4, 2:6)
ans = seq(from=2, to=8, by=2)
ans
rep(4:8, ans)
rep(4:7, ans)
x <- matrix(nrow=2, ncol=2, data=1:4, byrow=T)
x
rep(x,3)
x <- matrix(nrow=2, ncol=2, data=1:4, byrow=Tt)
x <- matrix(nrow=2, ncol=2, data=1:4, byrow=F)
x
rep(x,3)
rep(c("a","b","c"), 2
)
rep(c("apple", "banana", "cake"), 25)
help("sort")
y=c(8,93,4,5,6,234,,56,456,56)
y=c(8,93,4,5,6,234,0,56,456,56)
sort(y)
y=c(8,93,4,5,6,234,NA,56,456,56)
sort(y)
sort(y, descending=F)
sort(y, decreasing=F)
sort(y, decreasing=T)
sort(y, decreasing=T,na.last=Na)
sort(y, decreasing=T,na.last=NA)
y
sort(y, decreasing=T,na.last=T)
sort(y, decreasing=T,na.last=F)
help("order")
y = c(8,3,4,5,6,2,34,5,5,6,2,23,4,4,6,7)
order(y)
y = c(8,4,6,5,7,9)
order(7)
order(y)
mode(1.234)
mode(c(5,6,7,8))
mode("India")
mode(c("India", "USA"))
mode(factor(c("UP", "MP")) )
mode(list("India", "USA"))\
mode(list("India", "USA"))
mode(data.frame(x=1:2, y=c("India", "USA")))
mode(print)
x1 <- matrix(nrow=2, ncol=2, data=1:4, byrow=T)
x2 <- matrix(nrow=2, ncol=2, data=5:8, byrow=T)
x1
x2
x1+x2
x1[2,1] = "hello"
x1
x1+x2
x1 <- matrix(nrow=2, ncol=2, data=1:4, byrow=T)
x1
x2
x1%*%x2
x1%/%x2
x1 %/% x2
x1-x2
crossprod(x1x2)
crossprod(x1 x2)
crossprod(x12 x2)
crossprod(x1, x2)
t(x1)
t(x2)
z1 <- list( c("water", "juice", "lemonade"), rep(1:4, each=2), matrix(data=5:8, nrow=2, ncol=2, byrow=T) )
z1
z1[[1]][2]
letters[1:3]
letters[c(2,3,4,5,6,7,7,8)]
x = 1:10
x
x[(x>5)]
x[(x%%2=05)]
x[(x%%2=0)]
x[(x%%2==0)]
x[(x%%2==1)]
x[5]=NA
x
mean(x)
y = x[is.na(x)]
y
y = x[!is.na(x)]
y
mean(y)
x
mean(x[!is.na(x)])
x=1:10
x
x[-(1:5)]
x[(6:10)]
z <- list(a1 = 1, a2 = "c", a3 = 1:3)
names(z)
levels(z)
x
z
z$a1
z$a2
z$a2 = "c1"
z
names(z)[3]="c2"
names(z)
x <- c(water=1, juice=2, lemonade=3 )
x
names(x)
names(x)[2] = "apple"
names(z)
names(x)
x=1:10
x
x[]
ab <- list(1, 2, 3, "X", "Y", "Z")
>
ab <- list(1, 2, 3, "X", "Y", "Z")
dim(ab) = c(2,3)
ab
y <- c(1, 4, 3, 5, 4, 2, 4)
possible.dieface <- c(1, 2, 3, 4, 5, 6)
labels.dieface <- c("one", "two", "three", "four", "five", "six")
facy <- factor(y, levels = possible.dieface, labels = labels.dieface)
facy
x <- factor( c("juice", "juice", "lemonade", "juice", "water") )
x
class(x)
mode(x)
x <- factor( c("juice", "juice", "lemonade", "juice", "water") )
x
unclass(x)
x
x <- factor( c("juice", "juice", "lemonade", "juice", "water"), levels=c("juice","wate","lemonade") )
x
x <- factor( c("juice", "juice", "lemonade", "juice", "water"), levels=c("juice","water","lemonade") )
x
income <- ordered(c("high", "high", "low", "medium", "medium"), levels=c("low", "medium", "high") )
income
levels(income)
labels(income)
unclass(income)
x <- c(4, 5, 1, 2, 3, 3, 4, 4, 5, 6)
x= as.factor(x)
x
print( sqrt(2) )
print( sqrt(2), digits=5 )
print( sqrt(2), digits=10 )
print( format( 0.5, digits=10, nsmall=15 ) )
x <- matrix(nrow=3, ncol=2, data=1:6, byrow=T)
x
print(x)
format(x)
mode(format(x))
mode(print(x))
print("The zero occurs at", 2*pi, "radians.")
print("The zero occurs at"); print(2*pi); print("radians")
cat("The zero occurs at", 2*pi, "radians.", "\n")
d = date()
d
Sys.Date()
Sys.time()
help("cat")
x <- 7
cat("The square of", x, "is", x^2, "!\n")
cat("The square root of",x,"is approximately", format(sqrt(x),digits=3),"\n")
evenno <- c(2,4,6,8,10)
evenon
evenno
cat("The first few even numbers are:", evenno, "...\n")
help("paste")
paste("Everybody", "loves", "R Programming.")
paste("Everybody", "loves", "R Programming.", sep="*")
paste("Everybody", "loves", "R Programming.", sep="")
paste("Everybody", "loves", "R Programming.", sep="===")
names <- c("Prof. Singh", "Mr. Venkat", "Dr. Jha")
paste(names, "is", "a good", "person.")
paste(names, "is", "a good", "person.", collapse=", and ")
x <- paste("Ex", 1:5, sep="_")
x <- paste("Ex", 1:5, sep="_", collapse="")
x
x <- paste("Ex", 1:5, sep="_")
x
x[1]
x <- "The&!syntax&!of&!paste&!is!&available! &inthe online-help"
x
strsplit(x,"&1")
strsplit(x,"!")
strsplit(x,"&!")
l1 = strsplit(x,"&!")
l1
x <- "The&!syntax&!of&!paste&!is!&available! &inthe online-help"
x
l1 <- strsplit(x,"!&")
l1
l1[[1]][1]
l1[[1]][3]
x <- "R course 24.07.2017"
y <- "Number of participants: 25"
nchar(x)
nchar(y)
y <- "Number of participants: 25"
sub("25","30",y)
y <- "Mr. Singh is the smart one. Mr. Singh is funny, too."\
y <- "Mr. Singh is the smart one. Mr. Singh is funny, too."
y
sub("Mr. Singh","Professor Jha", y)
gsub("Mr. Singh","Professor Jha", y)
x <- "R course will start from 24.07.2017"
toupper(x)
z<-"R COURSE WILL START FROM 24.07.2017"
tolower(z)
str <- c("R Course", "exercises", "include examples of R language")
grep("ex", str, value=T)
str <- c("R Course", "exercises", "include examples of R language")
grep("ex", str, value=F)
grep("ex", str)
x <- "R course 24.07.2017"
y <- "Number of participants: 25"
c(x,y)
grep("Num", c(x,y) )
grep("Num", c(x,y) )
eval(2 ^ 2 ^ 3)
grep("Num", c(x,y), value=F )
grep("Num", c(x,y), value=T )
eval("6+8")
eval(6+8)
class(eval("6+8"))
eval(parse(text="6+8"))
eval(parse("6+8"))
class(parse(text="6+8"))
library(MASS)
painters
rownames(painters)
colnames(painters)
is.numeric(painters$School)
is.factor(painters$School)
is.numeric(painters$School)
is.numeric(painters$Colour)
summary(painers)
summary(painters)
is.data.frame(painters)
x <- 1:16
y <- matrix(x, nrow=4, ncol=4)
z <- letters[1:16]
x
y
z
c(x,y,z)
data.frame(x,y,z)
str(painters)
painters$School
painters["Da Udine", "Composition"]
summary(painters@School)
summary(painters$School)
plot(painter$school)
hist(painter$school)
hist(painters$school)
plot(painters$school)
plot(painters$School)
hist(painters$Composition)
attach(painters)
School
detach(painters)
School
painters
subset(painters, School=='F')
painters[ painters[["School"]] == "F", ]
painters[ painters[["School"]] == "F" ]
painters[ painters[["School"]] == "F", ]
subset(painters, Composition <= 6)
subset(painters, School=="F", select=c(-3,-5)
)
splitted <- split(painters, painters$School)
splitted
help("split")
splitted <- split(painters, painters$School)
split(painters, painters$Composition)
is.data.frame(splitted$A)
marks <- c(68, 82, 63, 86, 34, 96, 41, 89, 29, 51, 75, 77, 56, 59, 42)
quantile(marks)
quantile(marks, probs=c(0,.20,.40,.60,.80,1))
help("barplot")
gender <- c(1, 2, 1, 2, 1, 1, 1, 2, 1, 1)
gender
plot(gender)
barplot(gender)
table(gender)
barplot(table(gender))
table(gender)/length(gender)
barplot(table(gender)/length(gender))
barplot(table(gender))
direction <-c(1,1,2,1,2,3,2,2,3,3,3,1,2,3,2,2,3,1, 1,3,3,1,2,1,3,3,3,2,2,2,2,1,2,2,1,1,1,3,2,2,1,2,3,2,2,1,2,3,3,2,1,2,2,3,1,1,2,1,2,3,2,3,2,2,3,1,2,3,3,3,2,1,1,1,2,1,1,2,1,2,3,3,1,2,3,3,2,1,2,3,2,1,3,2,2,2,2,3,2,2)
table(direction)
barplot(table(direction))
barplot(table(direction)/length(direction))
pie(gender)
pie(table(gender))
pie(table(direction))
hist(gender)
hist(gender, freq=F)
hist(direction)
hist(table(direction))
marks<- c(68, 82, 63, 86, 34, 96, 41, 89, 29, 51, 75, 77, 56, 59, 42)
mean(marks)
median(marks)
prod(marks)^(1/length(marks))
1/mean(1/marks)
mean(c(1,2,3,4))
marks <- c(68, 82, 63, 86, 34, 96, 41, 89,
29, 51, 75, 77, 56, 59, 42)
marks
boxplot(marks)
marks1 <- c(628, 812, 613, 186, 34, 986, 41,
89, 29, 51, 795, 77, 56, 509, 420)
boxplot(marks1)
water <- c(33710,31666,33495,32758,34067,36069, 37497,33044,35216, 35383,37066,38037,38495, 39895,41311,42849,43038,43873,43923, 45078, 46935,47951,46085,48003,45050,42924,46061)
temp <- c(23,25,25,26,27,28,30,26,29,32,33,34, 35,38,39,42,43,44, 45,45.5,45,46,44,44,41,37,40)
plot(water,temp)
plot(water,temp, type='1')
plot(water,temp, type='l')
plot(water,temp, type='p')
plot(water,temp, type='b')
plot(water,temp, type='o')
h
plot(water,temp, type='h')
plot(water,temp, type='s')
plot(water,temp, type='b', xlab="Daily water consumption", ylab = "Day temperature")
scatter.smooth(water, temp)
scatter.smooth(water, temp, lpars = list(col="red", lwd=3,lyt=3))
scatter.smooth(water, temp, lpars = list(col="red", lwd=3,lty=3))
scatter.smooth(water, temp, lpars = list(col="red", lwd=3, lty=3))
pairs(cbind(water, temp))
contour(water,temp)
help("contour")
demo(contour())
demo(contour
)
help.search("contour")
temp <- c(23,25,25,26,27,28,30,26,29,32,33,34, 35,38,39,42,43,44, 45,45.5,45,46,44,44,41,37,40)
temp <- c(23,25,25,26,27,28,30,26,29,32,33,34, 35,38,39,42,43,44, 45,45.5,45,46,44,44,41,37,40)
temp <- c(23,25,25,26,27,28,30,26,29,32,33,34, 35,38,39,42,43,44, 45,45.5,45,46,44,44,41,37,40)
x = 10*1:nrow(volcano)
y = 10*1:ncol(volcano)
filled.contour(x, y, volcano, color = terrain.colors,
plot.title = title(main = "The Topography of Maunga Whau",
xlab = "Meters North", ylab = "Meters West"),
plot.axes = { axis(1, seq(100, 800, by = 100))
axis(2, seq(100, 600, by = 100)) },
key.title = title(main = "Height\n(meters)"),
key.axes = axis(4, seq(90, 190, by = 10)))  # maybe also asp = 1
mtext(paste("filled.contour(.) from", R.version.string),
side = 1, line = 4, adj = 1, cex = .66)
a <- expand.grid(1:20, 1:20)
b <- matrix(a[,1] + a[,2], 20)
filled.contour(x = 1:20, y = 1:20, z = b,
plot.axes = { axis(1); axis(2); points(10, 10) })
demo(persp)
demo(image)
demo(mosaicplot)
demo(dotchart)
c(1,2,4,4)^-c(1,2,-1,-2)
c(1,2,4,4)^-c(1,2,-1,-2)
a = c(1,2,4,4)^-c(1,2,-1,-2)
b = c(1,2,4,4)^-c(1,2,-1,-2)
a*b
2^-1
2^-2
4^-1
4^5
4^1
x = matrix(1:9,3,3,byrow=F)
x
x = matrix(1;100, 50, 2, byrow= T )
x = matrix(1:100, 50, 2, byrow= T )
x
y = matrix(1:100, 50, 2, byrow= F )
y
dim(x)
dim(y)
x = matrix(nrow=3, ncol=2, data=6:11, byrow=T)
x
x = matrix(data=6:11, byrow=T)
x
x = matrix(nrow=3, ncol=2, data=6:11, byrow=F)
x
x = matrix(nrow=3, ncol=3, data=c(10,20,30,40,50,60,70,80,90), byrow=F)
x
123^3
x = c(2,4,6,8,10)
ifelse(x<6,2*x,10*x)
for(i in 2:4) {print(1 + 2i)}
for(i in 20:24){print(i+2*i)}
sqrt(abs(seq(-6,6, by = 3)))
seq(18,-18,by=-5)
seq(to = 100, length = 8)
seq(to = -20, length = 10)
seq(to = 22, length = 5, by = 6)
Y <- c(90, 77, 51, 20, 30, 60, 89)
X <- seq(along = Y)
X
Y <- c(900, 717, 251, 280, 302, 670, 897)
X <- seq(along = Y)
Y[X[2]]
sort(c(20,50, 10, 30, 90,70, 80), decreasing = FALSE)
sort (c(20,50, 10, 30, 90,70, 80), increasing = TRUE)
order(c(20,50, 10, 30, 90,70, 80), decreasing = FALSE)
x=factor(c(1,2,2,5,1,2,1,5),levels=c(1,2,5),ordered=TRUE)
x
c(rep("male",2), rep("female", 3)
)
factor( c(rep("male",2), rep("female", 3)))
unclass(factor(c("lemonade","juice","water","juice","lemonade"),levels=c("juice","lemonade","water")))
print("My age is", (20+20)/3, "years.", digits=7)
print("My college is"); print(20+30); print("years old.")
paste("R Course", "will start from", c("10 Jul 2017", "10 Jul 2018"), collapse=", and ")
y=strsplit("Solution of problem 20-Solution of problem 30-Solution of problem 40","-")
y
y=strsplit("Student A gets 20 marks- Student B gets 30 marks- Student C gets 40 marks","-")
y[[1]][2]
grep("ab", c("abc", "def", "cbaba", "adaba"))
#Missing values
Dataset$Age = ifesle(is.na(Dataset$Age),
ave(Dataset$Age, FUN=function(x) mean(x, na.rm=TRUE)),
Dataset$Age)
#Missing values
Dataset$Age = ifelse(is.na(Dataset$Age),
ave(Dataset$Age, FUN=function(x) mean(x, na.rm=TRUE)),
Dataset$Age)
Dataset = read.csv(Data.csv")
#Missing values
Dataset$Age = ifelse(is.na(Dataset$Age),
ave(Dataset$Age, FUN=function(x) mean(x, na.rm=TRUE)),
Dataset$Age)
Dataset = read.csv(Data.csv")
Dataset$Age = ifelse(is.na(Dataset$Age),
ave(Dataset$Age, FUN=function(x) mean(x, na.rm=TRUE)),
Dataset$Age)
Dataset = read.csv(Data.csv")
Dataset = read.csv(Data.csv")
Dataset$Age = ifelse(is.na(Dataset$Age),
ave(Dataset$Age, FUN=function(x) mean(x, na.rm=TRUE)),
Dataset$Age)
Dataset$Country = factor(Dataset$Country,
levels = c('France','Germany','Spain'),
labels = c(1,2,3))
install.packages('rminer')
install.packages('leaps')
install.packages('rpart.plot')
install.packages('neuralnet')
install.packages('arules')
install.packages('arulesviz')
y
install.packages('xts')
install.packages('matrixcalc')
install.packages('forecast')
install.packages('treemap')
install.packages('rworldmap')
install.packages('arulesviz')
flag = T
class(flag)
library(matrixcalc)
library(matrixcalc)
x = matrix(nrow = 4, ncol = 2, data = 1:8, byrow = T)
x
matrix.inverse(x)
x = matrix(nrow = 4, ncol = 4, data = 1:16, byrow = T)
x
matrix.inverse(x)
x = matrix(nrow = 2, ncol = 2, data = 1:4, byrow = T)
x
matrix.inverse(x)
library(xlsx)
install.packages('xlsx')
library(xlsx)
#class seperation: Small dataset vs large dataset
#SedanCar.xlsx
df = read.xlsx(file.choose(),1,header = T)
df
df
library(xlsx)
#class seperation: Small dataset vs large dataset
#SedanCar.xlsx
df = read.xlsx(file.choose(),1,header = T)
df
df = df[, !apply(is.na(df),2,all)]
df = read.xlsx(file.choose(),1,header = T)
View(df)
View(df)
df = df[, !apply(is.na(df),2,all)]
plot(df$Annual_Income, df$Household_Area, las=1,
xlab = "Annual Income(a.lakhs)",
ylab = "Household Area(00s, ft2",
xlim = c(2,12), ylim=c(13,25),
pch=c(21,19)[as.numeric(df$Ownership)])
legend("bottomright", insert=0.005, c("Owner", "Nonowner"),
pch = c(19,21),cex=0.7, x.intersp=0.5, y.intersp = 0.5)
legend("bottomright", inset=0.005, c("Owner", "Nonowner"),
pch = c(19,21),cex=0.7, x.intersp=0.5, y.intersp = 0.5)
setwd("D:/D/Business Analysis and Data mining using R/Dataset")
